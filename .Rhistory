?loess
NOx = c(4.818, 2.849, 3.275, 4.691, 4.255, 5.064, 2.118, 4.602,
2.286, 0.97, 3.965, 5.344, 3.834, 1.99, 5.199, 5.283,
3.752, 0.537, 1.64, 5.055, 4.937, 1.561)
E = c(0.831, 1.045, 1.021, 0.97, 0.825, 0.891, 0.71, 0.801,
1.074, 1.148, 1, 0.928, 0.767, 0.701, 0.807, 0.902,
0.997, 1.224, 1.089, 0.973, 0.98, 0.665)
loess(NOx ~ E)
getAnywhere(loess)
getAnywhere(simpleLoess)
NOx = c(4.818, 2.849, 3.275, 4.691, 4.255, 5.064, 2.118, 4.602,
2.286, 0.97, 3.965, 5.344, 3.834, 1.99, 5.199, 5.283,
3.752, 0.537, 1.64, 5.055, 4.937, 1.561)
E = c(0.831, 1.045, 1.021, 0.97, 0.825, 0.891, 0.71, 0.801,
1.074, 1.148, 1, 0.928, 0.767, 0.701, 0.807, 0.902,
0.997, 1.224, 1.089, 0.973, 0.98, 0.665)
loess(NOx ~ E)
loess(NOx ~ E, family = "gaussian")
loess(NOx ~ E, family = "gaussian", span = 0.75)
loess(NOx ~ E, family = "gaussian", span = 0.75, degree = 2)
loess(NOx ~ E, family = "gaussian", span = 0.75, degree = 1)
loess(NOx ~ E, family = "gaussian", span = 0.75, degree = 0)
loess(NOx ~ E, family = "gaussian", span = 0.75, degree = 2)
loess(E ~ NOx, family = "gaussian", span = 0.75, degree = 2)
loess(NOx ~ E, family = "gaussian", span = 0.75, degree = 0, cell = 0.2)
loess(NOx ~ E, family = "gaussian", span = 0.75, degree = 2, cell = 0.2)
loess(NOx ~ E, family = "gaussian", span = 2/3, degree = 2, cell = 0.2)
wt = c(2.62,2.875,3.215,3.46,3.44,3.44,2.77)
mpg = c(21,21,21.4,18.1,19.2,17.8,19.7)
loess(mpg ~ wt)
predict(loess(mpg ~ wt))
predict(loess(mpg ~ wt), se = TRUE)
loess.smooth(wt, mpg, span = 0.75)
loess.smooth(wt, mpg, span = 0.75, evaluation = 30)
scatter.smooth(wt, mpg, span = 0.75, evaluation = 30)
scatter.smooth(wt, mpg, span = 0.75, evaluation = 30, se = TRUE)
loess.smooth(wt, mpg, span = 0.75, evaluation = 30)
l = loess.smooth(wt, mpg, span = 0.75, evaluation = 30)
l = predict(loess(mpg ~ wt), se = TRUE)
l$se.fit
?qt
1 - pt(1:5, df = 1)
qt(.975, df = c(1:10,20,50,100,1000))
tt <- seq(0, 10, length.out = 21)
ncp <- seq(0, 6, length.out = 31)
ptn <- outer(tt, ncp, function(t, d) pt(t, df = 3, ncp = d))
t.tit <- "Non-central t - Probabilities"
image(tt, ncp, ptn, zlim = c(0,1), main = t.tit)
persp(tt, ncp, ptn, zlim = 0:1, r = 2, phi = 20, theta = 200, main = t.tit,
xlab = "t", ylab = "non-centrality parameter",
zlab = "Pr(T <= t)")
plot(function(x) dt(x, df = 3, ncp = 2), -3, 11, ylim = c(0, 0.32),
main = "Non-central t - Density", yaxs = "i")
qt
getAnywhere(qt)
qt(.975, df = c(1:10,20,50,100,1000))
plx = loess.smooth(wt, mpg, span = 0.75, evaluation = 30)
plx = predict(loess.smooth(wt, mpg, span = 0.75, evaluation = 30))
plx = predict(loess(wt, mpg, span = 0.75, evaluation = 30))
plx = predict(loess(mpg ~ wt, span = 0.75, evaluation = 30))
plx
plx = predict(loess(mpg ~ wt, span = 0.75, se = T))
plx
predict(loess(mpg ~ wt, span = 0.75, se = T))
lines(wt,plx$fit)
plx = predict(loess(mpg ~ wt, se = T))
plx$fit
plot(cars)
plx<-predict(loess(cars$dist ~ cars$speed), se=T)
lines(cars$speed,plx$fit)
lines(cars$speed,plx$fit - qt(0.975,plx$df)*plx$se, lty=2)
lines(cars$speed,plx$fit + qt(0.975,plx$df)*plx$se, lty=2)
plot(wt,mpg)
plx = predict(loess(mpg ~ wt, se = T))
lines(wt,plx)
ls(plx)
plx
plot(cars)
plx<-predict(loess(cars$dist ~ cars$speed), se=T)
lines(cars$speed,plx$fit)
lines(cars$speed,plx$fit - qt(0.975,plx$df)*plx$se, lty=2)
lines(cars$speed,plx$fit + qt(0.975,plx$df)*plx$se, lty=2)
plx$se.fit
plx$se.fit
plot(cars)
plx<-predict(loess(cars$dist ~ cars$speed), se=T, observations = 30)
plx$fit
plot(cars)
plx<-predict(loess(cars$dist ~ cars$speed), se=T)
?predict
?predict.loess
plx = predict.loess(loess(mpg ~ wt, se = T))
library(stats)
?predict.loess
plx = predict.loess(loess(mpg ~ wt, se = T))
plx = loess.smooth(wt, mpg, span = 0.75, evaluation = 30)
plx
plx = loess.smooth(wt, mpg, span = 0.75, evaluation = 30, se=T)
predict(loess.smooth(wt, mpg, span = 0.75, evaluation = 30))
predict(loess(wt, mpg, span = 0.75, evaluation = 30))
predict(loess(mpg ~ wt, span = 0.75, evaluation = 30))
loess(mpg ~ wt, span = 0.75, evaluation = 30)
plx = loess(mpg ~ wt, span = 0.75, evaluation = 30)
plx$fitted
plx = loess(mpg ~ wt, span = 0.75, evaluation = 30, se=T)
plx$x
plx$y
plx = loess(mpg ~ wt, span = 0.75, evaluation = 30, se=T)
plx$fitted
plx$one.delta
plx$enp
plx$residuals
plx$s
plx$trace.hat
plx$robust
plx$terms
list(wt = wt, mpg =mpg)
as.data.frame(list(wt = wt, mpg = mpg))
dt = as.data.frame(list(wt = wt, mpg = mpg))
ggplot(dt, aes(wt, mpg)) + geom_point()
ggplot(dt, aes(wt, mpg)) + geom_point() + geom_smooth()
mtcars
mtcars[cyl==4]
mtcars[mtcars$cyl==4]
mtcars[,mtcars$cyl==4]
library(dplyr)
select(filter(mtcars, cyl == 4))
select(filter(mtcars, cyl == 4),c(wt,mpg))
dt = select(filter(mtcars, cyl == 4),c(wt,mpg))
ggplot(dt, aes(wt, mpg)) + geom_point() + geom_smooth()
setwd("~/git/cxplot")
source("~/git/cxplot/cxplot.R")
cxplot(ggplot(dt, aes(wt, mpg)) + geom_point() + geom_smooth())
loess(dt$mpg ~ dt$wt)
loess(dt$mpg ~ dt$wt, se=T)
predict(loess(dt$mpg ~ dt$wt, se=T), se=T)
los = predict(loess(dt$mpg ~ dt$wt, se=T), se=T)
los = predict(loess(dt$mpg ~ dt$wt, se=T), se=T)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth()
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth()
data(mpg)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth()
cxplot(ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth())
cxplot(ggplot(cars, aes(speed, dist)) + geom_point() + geom_smooth())
plx<-predict(loess(cars$dist ~ cars$speed), se=T)
plx$fit
plx<-predict(loess(cars$dist ~ cars$speed, observations = 30), se=T, observations = 30)
plx$fit
plx$df
loess(cars$dist ~ cars$speed)
loess.smooth(cars$dist ~ cars$speed, evaluation = 30)
loess.smooth(cars$speed ~ cars$dist, evaluation = 30)
loess.smooth(cars$speed, cars$dist, evaluation = 30)
loess(cars$speed, cars$dist, evaluation = 30)
loess(cars$dist ~ cars$speed, evaluation = 30)
plx = loess(cars$dist ~ cars$speed, evaluation = 30)
plx$fitted
plx = predict(loess(cars$dist ~ cars$speed, evaluation = 30), se=T)
plx$fit
plx$se.fit
